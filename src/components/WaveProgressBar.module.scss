.waveProgressBar {
	height: 40px;
	position: relative;
	user-select: none;
	.track {
		$track-height: 4px;
		position: absolute;
		left: 20px;
		right: 20px;
		height: $track-height;
		top: calc(50% - #{$track-height * 0.5});
		.played {
			position: absolute;
			left: 0;
			right: calc(100% - var(--progress));
			top: -3px;
			bottom: -3px;
			overflow: hidden;
			display: flex;
		}
		.unplayed {
			position: absolute;
			left: var(--progress);
			height: 100%;
			right: 0;
			border-radius: 0 100px 100px 0;
			background-color: var(--md-sys-color-surface-container-highest);
		}
		.control {
			position: absolute;
			inset: 0;
			top: -2px;
			bottom: -2px;
			cursor: pointer;
			z-index: 1;
		}
	}
	.handleContainer {
		position: absolute;
		left: 20px;
		right: 20px;
		top: 0;
		bottom: 0;
		transform: translateX(calc(var(--progress) - 20px));
		pointer-events: none;
		z-index: 2;
		.handle {
			width: 40px;
			height: 40px;
			position: absolute;
			border-radius: 40px;
			left: 0;
			cursor: pointer;
			pointer-events: all;
			&::before {
				content: '';
				display: block;
				position: absolute;
				top: 10px;
				left: 10px;
				width: 20px;
				height: 20px;
				background-color: var(--md-sys-color-primary);
				border-radius: 20px;
				z-index: 2;
			}
			&::after {
				content: '';
				display: block;
				position: absolute;
				top: 0px;
				left: 0px;
				width: 40px;
				height: 40px;
				background-color: var(--md-sys-color-primary);
				border-radius: 20px;
				opacity: 0;
				transform: scale(0.6);
				transition: opacity 0.2s ease, transform 0.2s ease;
			}
			&:hover::after {
				opacity: 0.08;
				transform: scale(0.9);
			}
			&:active::after {
				opacity: 0.12;
				transform: scale(1);
			}
		}
	}	
}

.sinWave {
	position: absolute;
	width: 100vw;
	height: 100%;
	animation: sin 3s linear infinite;
}
@keyframes sin {
	0% {
		transform: translateX(0px);
	}
	100% {
		transform: translateX(-32px);
	}
}
.paused .sinWave {
	//animation-play-state: paused;
}
.waveProgressBar.disabled {
	pointer-events: none !important;
	* {
		pointer-events: none !important;
	}
	.track {
		.played {
			opacity: 0.38;
		}
		.unplayed {
			background-color: var(--md-sys-color-on-surface);
		}
	}
	.handleContainer {
		.handle {
			&::before {
				background-color: var(--md-sys-color-on-surface);
			}
		}
	}	
}
